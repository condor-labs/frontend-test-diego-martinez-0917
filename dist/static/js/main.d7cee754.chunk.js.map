{"version":3,"sources":["utils/httpRequest.js","components/Badge/badge.js","pages/favoritePlaces.js","components/cardHeader.js","pages/header.js","pages/slide.js","pages/sugget.js","pages/visit.js","App.js","reportWebVitals.js","index.js"],"names":["getValues","url","axios","baseURL","method","error","Badge","title","color","className","icon","faCircle","FavoritePlaces","useState","loading","setLoading","venues","setVenues","useEffect","then","response","data","places","filter","place","main_headquarter","catch","swal","message","id","map","seat","weather","style","fontSize","src","image","alt","faMapMarkedAlt","name","description","Math","round","main","temp","humidity","wind","speed","CardHeader","city","windSpeed","date","position","zIndex","width","dateTransform","Date","getHours","dateMessage","header","mainHeadquarter","setMainHeadquarter","venue","resul","Slider","sliderData","setSlideData","current","next","slider","setSlider","list","getDay","CarouselItem","change","text","onClick","disabled","faArrowLeft","faArrowRight","slice","item","index","Suggets","setCity","filterTemp","day","min","forEach","Visit","cities","setCities","result","console","log","href","target","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7cee754.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst BASE_URL = 'https://run.mocky.io/v3/';\r\nexport const getValues =(url)=>{\r\n    try {\r\n        return axios({\r\n            baseURL:BASE_URL,\r\n            url,\r\n            method:'GET'\r\n          })\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport './badge.scss';\r\n\r\nexport const Badge = ({ title, color, className }) => {\r\n  return (\r\n    <p className='badge'>\r\n      <FontAwesomeIcon icon={faCircle} color={color}/>\r\n      <span className={className}>{title}</span>\r\n    </p>\r\n  );\r\n};","import React, { useState, useEffect  } from \"react\";\r\nimport swal from 'sweetalert'\r\nimport { getValues } from '../utils/httpRequest';\r\nimport { Badge } from '../components/Badge/badge';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMapMarkedAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport 'weather-icons/css/weather-icons.css';\r\n\r\nexport default function FavoritePlaces() {\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [venues , setVenues] = useState([])\r\n\r\n    useEffect(()=>{\r\n        getValues('818d0158-727b-461e-9f76-06734ed7e582')\r\n        .then(response=>{\r\n            setVenues(response.data.places.filter((place) => place.main_headquarter === false))\r\n            setLoading(false)\r\n            })\r\n        .catch(error=>\r\n            swal(\"error\", `${error.message}`, \"error\")\r\n            )\r\n    },[])\r\n\r\n    return(\r\n        <section\r\n         id='widget-favorite'\r\n         className='widget-favorite '>\r\n            <h2 className='title-section'> Our favorite <span>places</span></h2>\r\n            <div className='favorite-list'>\r\n             {!loading &&\r\n                venues.map((seat) => (                    \r\n                    <div className='widget-card' key={seat.id} >\r\n                        <i className={`wi wi-day-${seat.weather[0].icon} widget-icon`} style={{ fontSize: '60px', color:'yellow' }}/>               \r\n                        <div className='widget-card-wrapper'>\r\n                            <div className='widget-card-image'>\r\n                                <img src={seat.image} alt='city' />\r\n                            </div>\r\n                            <div className='content'>\r\n                                <div className={`purple-background widget-headquarter-content`}>\r\n                                    {seat.icon && <FontAwesomeIcon icon={faMapMarkedAlt}/>}\r\n                                    <p className={`widget-headquarter-name `}>{seat.name}</p>\r\n                                </div>                          \r\n                                <p className='widget-headquarter-desc'>{seat.description}</p>\r\n                                <div className='badges'>\r\n                                    <Badge\r\n                                        className='widget-temperature'\r\n                                        title={`${Math.round(seat.main.temp - 273.15)} °C`}\r\n                                        color={'yellow'}/>\r\n                                    <Badge\r\n                                        className='widget-humidity'\r\n                                        title={`${seat.main.humidity} %`}\r\n                                        color={'pink'}/>\r\n                                    <Badge\r\n                                        className='widget-wind'\r\n                                        title={`${seat.wind.speed} m/s`}\r\n                                        color={'blue'}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React from \"react\";\r\nimport { Badge } from '../components/Badge/badge';\r\nimport 'weather-icons/css/weather-icons.css';\r\n\r\nexport default function CardHeader({\r\n    city,\r\n    temp,\r\n    humidity,\r\n    windSpeed,\r\n    icon,\r\n    image,\r\n    date,\r\n  }){\r\n    const dateMessage = (date) => {\r\n        const dateTransform = new Date(date).getHours();\r\n        if (dateTransform > 4 && dateTransform < 12) return 'Good Morning';\r\n        else if (dateTransform >= 12 && dateTransform < 18) return 'Good Afternoon';\r\n        else return 'Good Nigth';\r\n      };\r\n    return(\r\n        <div\r\n        id='widget-header'\r\n        className='widget-header'>\r\n        <img className='card-borde' style={{position:'absolute', zIndex:-1,width: '400px'}} src={image} alt='city'/>\r\n        <i className={`wi wi-day-${icon} widget-icon`}></i>\r\n        <p className='widget-headquarter'>{city}</p>\r\n        <p>{Math.round(temp - 273.15)} °C</p>\r\n        <Badge\r\n            className='widget-humidity'\r\n            title={`${humidity} %`}\r\n            color={'pink'}/>\r\n        <Badge\r\n            className='widget-wind'\r\n            title={`${windSpeed} m/s`}\r\n            color={'blue'}/>\r\n         <p>{dateMessage(date)}</p>\r\n         <h2>Condor!</h2>\r\n        </div>\r\n    )\r\n}","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useEffect, useState } from 'react';\r\nimport swal from 'sweetalert'\r\nimport { getValues } from '../utils/httpRequest';\r\nimport CardHeader from '../components/cardHeader';\r\n\r\nexport default function header(){\r\n    \r\n    const [mainHeadquarter, setMainHeadquarter] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    \r\n    useEffect(()=>{\r\n               \r\n        getValues('818d0158-727b-461e-9f76-06734ed7e582')\r\n        .then(response=>{\r\n            const [resul] = (response.data.places.filter((venue) => venue.main_headquarter === true))\r\n            setMainHeadquarter(resul)\r\n            setLoading(false)\r\n            })\r\n        .catch(error=>\r\n            swal(\"error\", `${error.message}`, \"error\")\r\n            )\r\n    },[])\r\n\r\n    return(\r\n        <header>\r\n        {!loading  &&<CardHeader\r\n            city={mainHeadquarter?.name}\r\n            icon={mainHeadquarter?.weather[0].icon}\r\n            image={mainHeadquarter?.image}\r\n            humidity={mainHeadquarter?.main.humidity}\r\n            temp={mainHeadquarter?.main.temp}\r\n            windSpeed={mainHeadquarter?.wind.speed}\r\n            date={mainHeadquarter?.date}\r\n            />\r\n        }\r\n        </header>\r\n    )\r\n}","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useEffect, useState } from 'react';\r\nimport swal from 'sweetalert'\r\nimport { getValues } from '../utils/httpRequest';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft,faArrowRight } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function Slider(){\r\n    \r\n    const [sliderData, setSlideData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [slider, setSlider] = useState({ current: 0, next: 3 });\r\n    \r\n    useEffect(()=>{               \r\n        getValues('73c29128-d158-40db-aeae-ea78a0d762b7')\r\n        .then(response=>{\r\n            setSlideData(response.data.list)\r\n            setLoading(false)\r\n            })\r\n        .catch(error=>\r\n            swal(\"error\", `${error.message}`, \"error\")\r\n            )\r\n    },[])\r\n\r\n    const getDay = (date) => {\r\n        const days = [\r\n          'Monday',\r\n          'Tuesday',\r\n          'Wednesday',\r\n          'Thursday',\r\n          'Friday',\r\n          'Saturday',\r\n          'Sunday',\r\n        ];\r\n        const dayIndex = new Date(date).getDay();\r\n        return days[dayIndex];\r\n    };\r\n\r\n    const CarouselItem = ({ date, temp, humidity, windSpeed }) => {\r\n        return (\r\n          <div className='widget-carousel-item'>\r\n            <p className='widget-day'>{getDay(date)}</p>\r\n            <p>{Math.round(temp - 273.15)} °C</p>\r\n            <div className='badges'>\r\n              <samp>{humidity} %</samp>\r\n              <samp>{windSpeed} m/s</samp>\r\n            </div>\r\n          </div>\r\n        );\r\n    };\r\n\r\n    const change = (text)=>{\r\n        switch (text) {\r\n            case 'left':\r\n                setSlider({\r\n                    current:0,\r\n                    next:3\r\n                })\r\n                break;\r\n            case 'right':\r\n                setSlider({\r\n                    current:3,\r\n                    next:6\r\n                })\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <section\r\n         id='widget-carousel'\r\n         className='widget-carousel'>\r\n            <div className='widget-carousel-header'>\r\n                <h3 className='widget-carousel-header-title'>Forecast Extended</h3>\r\n                <div className='wrapper-button'>\r\n                    <button className='arrow-button' onClick={()=>change('left')} disabled={slider.current===0}>\r\n                        <FontAwesomeIcon icon={faArrowLeft} color=\"blue\"/>\r\n                    </button>\r\n                    <button className='arrow-button' onClick={()=>change('right')} disabled={slider.current===3}>\r\n                        <FontAwesomeIcon icon={faArrowRight} color=\"blue\"/>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className='list-items'>\r\n                {!loading &&\r\n                sliderData\r\n                    .slice(slider.current, slider.next)\r\n                    .map((item, index) => (\r\n                        <CarouselItem\r\n                            key={index}\r\n                            date={item.date}\r\n                            temp={item.main.temp}\r\n                            humidity={item.main.humidity}\r\n                            windSpeed={item.wind.speed}/>\r\n                    ))}\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport swal from 'sweetalert'\r\nimport { getValues } from '../utils/httpRequest';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMapMarkedAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Badge } from '../components/Badge/badge';\r\nimport 'weather-icons/css/weather-icons.css';\r\n\r\nexport default function Suggets () {\r\n  \r\n  const [city, setCity] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(()=>{\r\n               \r\n    getValues('818d0158-727b-461e-9f76-06734ed7e582')\r\n    .then(response=>{\r\n\r\n        const filterTemp = (response.data.places.filter((day) => \r\n            Math.round(day.main.temp - 273.15)>=25 && \r\n            Math.round(day.main.temp - 273.15)<=28))\r\n        let min = filterTemp[0]\r\n        filterTemp.forEach(day => {\r\n            \r\n            if (day.main.humidity < min.main.humidity) {\r\n                min = day;\r\n              }\r\n        })\r\n        setCity(min)\r\n        setLoading(false)\r\n        })\r\n    .catch(error=>\r\n        swal(\"error\", `${error.message}`, \"error\")\r\n        )\r\n},[])\r\n  return (\r\n    <section id='widget-suggest' className='widget-suggest'>\r\n      <h2 className='mt-4 mb-3 title-section'>\r\n        HeadQuater <span>Suggest</span>\r\n      </h2>\r\n      {!loading && (\r\n        <div className='widget-card'>\r\n        <i className={`wi wi-day-${city.weather[0].icon} widget-icon`} style={{ fontSize: '60px', color:'yellow' }}/>               \r\n        <div className='widget-card-wrapper'>\r\n            <div className='widget-card-image'>\r\n                <img src={city.image} alt='city' />\r\n            </div>\r\n            <div className='content'>\r\n                <div className={`purple-background widget-headquarter-content`}>\r\n                    {city.icon && <FontAwesomeIcon icon={faMapMarkedAlt}/>}\r\n                    <p className={`widget-headquarter-name `}>{city.name}</p>\r\n                </div>                          \r\n                <p className='widget-headquarter-desc'>{city.description}</p>\r\n                <div className='badges'>\r\n                    <Badge\r\n                        className='widget-temperature'\r\n                        title={`${Math.round(city.main.temp - 273.15)} °C`}\r\n                        color={'yellow'}/>\r\n                    <Badge\r\n                        className='widget-humidity'\r\n                        title={`${city.main.humidity} %`}\r\n                        color={'pink'}/>\r\n                    <Badge\r\n                        className='widget-wind'\r\n                        title={`${city.wind.speed} m/s`}\r\n                        color={'blue'}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n  </div>\r\n      )}\r\n    </section>\r\n  );\r\n};","/* eslint-disable react/jsx-no-target-blank */\r\nimport React, { useEffect, useState } from 'react';\r\nimport swal from 'sweetalert'\r\nimport { getValues } from '../utils/httpRequest';\r\nimport 'weather-icons/css/weather-icons.css';\r\n\r\nexport default function Visit () {\r\n  \r\n  const [cities, setCities] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(()=>{\r\n               \r\n    getValues('f8926877-849a-416f-8226-9fd9d9fc5e07')\r\n    .then(response=>{\r\n        \r\n        const filterTemp = (response.data.result.filter((day) =>\r\n              \r\n            Math.round(day.main.temp - 273.15)>=24 && \r\n            Math.round(day.main.temp - 273.15)<=30))\r\n            console.log(filterTemp)\r\n        setCities(filterTemp)\r\n        setLoading(false)\r\n        })\r\n    .catch(error=>\r\n        swal(\"error\", `${error.message}`, \"error\")\r\n        )\r\n},[])\r\n  return (\r\n    <section id='widget-cities' className='widget-cities'>\r\n      <h2 className='mb-3 mt-4 title-section'>\r\n        PLACE TO <span>VISIT</span>\r\n      </h2>\r\n      {!loading && (\r\n        <div className='cities-list' key={cities.id} >\r\n          {cities\r\n            .slice(0, 3)\r\n            .map((city)=>(\r\n            <div className='widget-card'>\r\n            <div className='widget-card-image'>\r\n              <img className='' src={city.image} alt='city' />\r\n            </div>\r\n            <div className='widget-card-content'>\r\n              <p className='widget-city-name'>{city.name}</p>\r\n              <a\r\n                href='https://condorlabs.io/about'\r\n                target='_blank'\r\n                className='visit-button'\r\n              >\r\n                Visit place\r\n              </a>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};","import './App.scss';\nimport FavoritePlaces from './pages/favoritePlaces';\nimport Header from './pages/header'\nimport Slider from './pages/slide';\nimport Suggets from './pages/sugget';\nimport Visit from './pages/visit';\n\nexport default function App() {\n  return (\n    <div className='App'>\n      <Header/>\n      <Slider/>\n      <FavoritePlaces/>\n      <Suggets/>\n      <Visit/>\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}