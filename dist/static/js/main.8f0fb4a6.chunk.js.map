{"version":3,"sources":["utils/httpRequest.js","components/Badge/badge.js","pages/favoritePlaces.js","components/cardHeader.js","pages/header.js","pages/slide.js","pages/sugget.js","pages/visit.js","App.js","reportWebVitals.js","index.js"],"names":["getValues","url","axios","baseURL","method","error","Badge","title","color","className","icon","faCircle","FavoritePlaces","useState","loading","setLoading","venues","setVenues","useEffect","then","response","data","places","filter","place","main_headquarter","catch","swal","message","id","map","seat","weather","src","image","alt","faMapMarkerAlt","name","sys","country","description","Math","round","main","temp","humidity","wind","speed","CardHeader","city","windSpeed","date","dateTransform","Date","getHours","dateMessage","header","mainHeadquarter","setMainHeadquarter","venue","resul","Slider","sliderData","setSlideData","current","next","slider","setSlider","list","getDay","CarouselItem","change","text","onClick","disabled","faArrowLeft","faArrowRight","slice","item","index","Suggets","setCity","min","suggestDay","days","tempFilter","day","Humidity","humiditys","less","forEach","Visit","cities","setCities","suge","result","href","target","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f0fb4a6.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst BASE_URL = 'https://run.mocky.io/v3/';\r\nexport const getValues =(url)=>{\r\n    try {\r\n        return axios({\r\n            baseURL:BASE_URL,\r\n            url,\r\n            method:'GET'\r\n          })\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport './badge.scss';\r\n\r\nexport const Badge = ({ title, color, className }) => {\r\n  return (\r\n    <p className='badge'>\r\n      <FontAwesomeIcon className='circle-badge' icon={faCircle} color={color}/>\r\n      <span className={className}>{title}</span>\r\n    </p>\r\n  );\r\n};","import React, { useState, useEffect  } from \"react\";\r\nimport swal from 'sweetalert'\r\nimport { getValues } from '../utils/httpRequest';\r\nimport { Badge } from '../components/Badge/badge';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport 'weather-icons/css/weather-icons.css';\r\n\r\nexport default function FavoritePlaces() {\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [venues , setVenues] = useState([])\r\n\r\n    useEffect(()=>{\r\n        getValues('818d0158-727b-461e-9f76-06734ed7e582')\r\n        .then(response=>{\r\n            setVenues(response.data.places.filter((place) => place.main_headquarter === false))\r\n            setLoading(false)\r\n        })\r\n        .catch(error=>\r\n            swal(\"error\", `${error.message}`, \"error\")\r\n        )\r\n    },[])\r\n\r\n    return(\r\n        <section\r\n         id='widget-favorite'\r\n         className='widget-favorite'>\r\n            <h2 className='title-section'> Our favorite <span>places</span></h2>\r\n            <div className='favorite-list'>\r\n             {!loading &&\r\n                venues.map((seat) => (                    \r\n                    <div className='widget-card' key={seat.id} >\r\n                        <div className='container-card'>\r\n                            <i className={`wi wi-day-${seat.weather[0].icon} widget-icon`}/>               \r\n                            <div className='widget-card-wrapper'>\r\n                            <div className='widget-card-image'>\r\n                                <img src={seat.image} alt='city' />\r\n                            </div>\r\n                            <div className='content'>\r\n                                <div className='headquarter-content'>\r\n                                    <FontAwesomeIcon  className='headquarter-icon' icon={faMapMarkerAlt}/>\r\n                                    <p className='widget-headquarter-name'>{seat.name} - {seat.sys.country}</p>\r\n                                </div>                          \r\n                                <p className='headquarter-desc'>{seat.description}</p>\r\n                                <div className='badges'>\r\n                                    <Badge\r\n                                        className='widget-temperature'\r\n                                        title={`${Math.round(seat.main.temp - 273.15)} °C`}\r\n                                        color={'yellow'}/>\r\n                                    <Badge\r\n                                        className='widget-humidity'\r\n                                        title={`${seat.main.humidity} %`}\r\n                                        color={'pink'}/>\r\n                                    <Badge\r\n                                        className='widget-wind'\r\n                                        title={`${seat.wind.speed} m/s`}\r\n                                        color={'blue'}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React from \"react\";\r\nimport { Badge } from '../components/Badge/badge';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport 'weather-icons/css/weather-icons.css';\r\n\r\nexport default function CardHeader({city,temp,humidity,windSpeed,icon,date}){\r\n    \r\n  const dateMessage = (date) => {\r\n    const dateTransform = new Date(date).getHours();\r\n    if (dateTransform > 4 && dateTransform < 12) return 'Good Morning';\r\n    else if (dateTransform >= 12 && dateTransform < 18) return 'Good Afternoon';\r\n    else return 'Good Nigth';\r\n  }\r\n\r\n  return(\r\n    <div className='widget-content'> \r\n      <i className={`wi wi-day-${icon} widget-icon`} ></i>\r\n      <div className='purple-background'>\r\n        <FontAwesomeIcon icon={faMapMarkerAlt}/>\r\n        <p className='widget-headquarter'>{city}</p>\r\n      </div>\r\n      <p className='temp widget-temperature' >{Math.round(temp - 273.15)} °C</p>\r\n      <div className='badges-content'>\r\n        <Badge\r\n            className='widget-humidity'\r\n            title={`${humidity} %`}\r\n            color={'pink'}/>\r\n        <Badge\r\n            className='widget-wind'\r\n            title={`${windSpeed} m/s`}\r\n            color={'blue'}/>\r\n      </div>\r\n      <div className='date-msg'>\r\n        <p>{dateMessage(date)}</p>\r\n        <h1>Condor!</h1>\r\n      </div>\r\n    </div>\r\n  )\r\n}","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useEffect, useState } from 'react';\r\nimport swal from 'sweetalert'\r\nimport { getValues } from '../utils/httpRequest';\r\nimport CardHeader from '../components/cardHeader';\r\n\r\nexport default function header(){\r\n    \r\n    const [mainHeadquarter, setMainHeadquarter] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    \r\n    useEffect(()=>{\r\n        getValues('818d0158-727b-461e-9f76-06734ed7e582')\r\n        .then(response=>{\r\n            const [resul] = (response.data.places.filter((venue) => venue.main_headquarter === true))\r\n            setMainHeadquarter(resul)\r\n            setLoading(false)\r\n        })\r\n        .catch(error=>\r\n            swal(\"error\", `${error.message}`, \"error\")\r\n        )\r\n    },[])\r\n\r\n    return(\r\n        <section id='widget-header'className='widget-header'>\r\n            <img className='header-image' src={mainHeadquarter.image} alt='city'/>\r\n            {!loading  &&<CardHeader\r\n                city={mainHeadquarter?.name}\r\n                icon={mainHeadquarter?.weather[0].icon}\r\n                image={mainHeadquarter?.image}\r\n                humidity={mainHeadquarter?.main.humidity}\r\n                temp={mainHeadquarter?.main.temp}\r\n                windSpeed={mainHeadquarter?.wind.speed}\r\n                date={mainHeadquarter?.date}\r\n                />}\r\n        </section>\r\n    )\r\n}","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useEffect, useState } from 'react';\r\nimport swal from 'sweetalert'\r\nimport { Badge } from '../components/Badge/badge';\r\nimport { getValues } from '../utils/httpRequest';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft,faArrowRight } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function Slider(){\r\n    \r\n    const [sliderData, setSlideData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [slider, setSlider] = useState({ current: 0, next: 3 });\r\n    \r\n    useEffect(()=>{               \r\n        getValues('73c29128-d158-40db-aeae-ea78a0d762b7')\r\n        .then(response=>{\r\n            setSlideData(response.data.list)\r\n            setLoading(false)\r\n            })\r\n        .catch(error=>\r\n            swal(\"error\", `${error.message}`, \"error\")\r\n            )\r\n    },[])\r\n\r\n    const getDay = (date) => {\r\n        const days = [\r\n          'Monday',\r\n          'Tuesday',\r\n          'Wednesday',\r\n          'Thursday',\r\n          'Friday',\r\n          'Saturday',\r\n          'Sunday',\r\n        ];\r\n        const dayIndex = new Date(date).getDay();\r\n        return days[dayIndex];\r\n    };\r\n\r\n    const CarouselItem = ({ date, temp, humidity, windSpeed }) => {\r\n        return (\r\n          <div className='widget-carousel-item'>\r\n            <p className='widget-day'>{getDay(date)}</p>\r\n            <p className='temp-title'>{Math.round(temp - 273.15)} °C</p>\r\n            <div className='badges-content'>\r\n                <Badge\r\n                className='badge-humidity'\r\n                title={`${humidity} %`}\r\n                color={'pink'}/>\r\n                <Badge\r\n                className='badge-wind'\r\n                title={`${windSpeed} m/s`}\r\n                color={'blue'}/>\r\n            </div>\r\n          </div>\r\n        );\r\n    };\r\n\r\n    const change = (text)=>{\r\n        switch (text) {\r\n            case 'left':\r\n                setSlider({\r\n                    current:0,\r\n                    next:3\r\n                })\r\n                break;\r\n            case 'right':\r\n                setSlider({\r\n                    current:3,\r\n                    next:6\r\n                })\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <section id='widget-carousel' className='widget-carousel'>\r\n            <div className='carousel-header'>\r\n                <h3 className='carousel-header-title'>Forecast Extended</h3>\r\n                <div className='wrapper-button'>\r\n                    <button className='arrow-button' onClick={()=>change('left')} disabled={slider.current===0}>\r\n                        <FontAwesomeIcon icon={faArrowLeft}/>\r\n                    </button>\r\n                    <button className='arrow-button' onClick={()=>change('right')} disabled={slider.current===3}>\r\n                        <FontAwesomeIcon icon={faArrowRight}/>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className='list-items'>\r\n                {!loading &&\r\n                    sliderData\r\n                    .slice(slider.current, slider.next)\r\n                    .map((item, index) => (\r\n                        <CarouselItem\r\n                            key={index}\r\n                            date={item.date}\r\n                            temp={item.main.temp}\r\n                            humidity={item.main.humidity}\r\n                            windSpeed={item.wind.speed}/>\r\n                    ))\r\n                }\r\n            </div>\r\n        </section>\r\n    )\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react';\r\nimport swal from 'sweetalert'\r\nimport { getValues } from '../utils/httpRequest';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Badge } from '../components/Badge/badge';\r\nimport 'weather-icons/css/weather-icons.css';\r\n\r\nexport default function Suggets () {\r\n  \r\n  const [city, setCity] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(()=>{\r\n    getValues('818d0158-727b-461e-9f76-06734ed7e582')\r\n    .then(response=>{\r\n      const min = suggestDay(response.data.places)\r\n      setCity(min)\r\n      setLoading(false)\r\n    })\r\n    .catch(error=>\r\n      swal(\"error\", `${error.message}`, \"error\")\r\n    )\r\n  },[])\r\n\r\n  const suggestDay = (days = []) => {\r\n    const tempFilter = days.filter(\r\n      (day) =>(\r\n      day.main.temp>298.15 && \r\n      day.main.temp<301.15)\r\n    );\r\n    return Humidity(tempFilter);\r\n  };\r\n\r\n  const Humidity = (humiditys = []) => {\r\n    let less = humiditys[0];\r\n    humiditys.forEach((item) => {\r\n      if (item.main.humidity < less.main.humidity) less = item\r\n    });\r\n    return less;\r\n  };\r\n\r\n  const getDay = (date) => {\r\n    const days = [\r\n      'Monday',\r\n      'Tuesday',\r\n      'Wednesday',\r\n      'Thursday',\r\n      'Friday',\r\n      'Saturday',\r\n      'Sunday',\r\n    ];\r\n    const dayIndex = new Date(date).getDay();\r\n    return days[dayIndex];\r\n  };\r\n\r\n  return (\r\n    <section id='widget-suggest' className='widget-suggest'>\r\n      <h2 className='title-section'>\r\n        HeadQuater <span>Suggest</span>\r\n      </h2>\r\n      {!loading && (\r\n        <div className='widget-card'>\r\n        <i className={`wi wi-day-${city.weather[0].icon} widget-icon`}/>               \r\n          <div className={`widget-headquarter-content`}>\r\n            <FontAwesomeIcon icon={faMapMarkerAlt}/>\r\n            <p className={`widget-headquarter`}>{city.name} - {city.sys.country}</p>\r\n          </div>                          \r\n          <p className='temp-title widget-temperature'>{`${Math.round(city.main.temp - 273.15)} °C`}</p>\r\n          <div className=\"footer-card\">\r\n            <div className=\"badges\">\r\n              <Badge\r\n                className='widget-humidity'\r\n                title={`${city.main.humidity} %`}\r\n                color={'pink'}/>\r\n              <Badge\r\n                className='widget-wind'\r\n                title={`${city.wind.speed} m/s`}\r\n                color={'blue'}/>\r\n            </div>\r\n            <p className=\"widget-day\">{getDay(city.date)}</p>\r\n          </div>\r\n        </div>        \r\n      )}\r\n    </section>\r\n  );\r\n};","/* eslint-disable react/jsx-no-target-blank */\r\nimport React, { useEffect, useState } from 'react';\r\nimport swal from 'sweetalert'\r\nimport { getValues } from '../utils/httpRequest';\r\nimport 'weather-icons/css/weather-icons.css';\r\n\r\nexport default function Visit () {\r\n  \r\n  const [cities, setCities] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(()=>{\r\n    getValues('f8926877-849a-416f-8226-9fd9d9fc5e07')\r\n    .then(response=>{\r\n        const suge = suggestDay(response.data.result)    \r\n        setCities(suge)\r\n        setLoading(false)\r\n        })\r\n    .catch(error=>\r\n        swal(\"error\", `${error.message}`, \"error\")\r\n        )\r\n  },[])\r\n\r\n  const suggestDay = (days = []) => {\r\n    const tempFilter = days.filter(\r\n      (day) =>(\r\n        Math.round(day.main.temp - 273.15)>=24 && \r\n        Math.round(day.main.temp - 273.15)<=30)\r\n    );\r\n    return tempFilter;\r\n  };\r\n\r\n  return (\r\n    <section id='widget-cities' className='widget-cities'>\r\n      <h2 className='title-section'>\r\n        PLACE TO <span>VISIT</span>\r\n      </h2>\r\n      {!loading && (\r\n        <div className='cities-list'>\r\n          {cities\r\n            .slice(0, 3)\r\n            .map((city)=>(\r\n              <div className='widget-card' key={city.id}>\r\n                <div className='widget-card-image'>\r\n                  <img className='cities-image' src={city.image} alt='city' />\r\n                </div>\r\n                <div className='widget-card-content'>\r\n                  <p className='widget-city-name'>{city.name}</p>\r\n                  <a\r\n                    href='https://condorlabs.io/about'\r\n                    target='_blank'\r\n                    className='visit-button'\r\n                  >\r\n                    Visit place\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};","import './App.scss';\nimport FavoritePlaces from './pages/favoritePlaces';\nimport Header from './pages/header'\nimport Slider from './pages/slide';\nimport Suggets from './pages/sugget';\nimport Visit from './pages/visit';\n\nexport default function App() {\n  return (\n    <div className='App'>\n      <Header/>\n      <Slider/>\n      <FavoritePlaces/>\n      <Suggets/>\n      <Visit/>\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}